/**** BUTTONS *****/

button,
input[type="submit"],
input[type="button"],
input[type="reset"],
[role="button"],
:any-link[role="button"]  {
  /* Display */
  display: inline-flex;
  width: auto;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  align-self: start;
  transition: 0.2s all ease-in-out;
  
  /*  shape */
  background-color: transparent;
  min-height: var(--space-5x);
  margin: 0;
  padding: var(--space) calc(var(--space) * 2);

  /*  border */
  border: none;
  border-radius: var(--border-radius-s, 0); /* defined in design_tokens/shape.scss */
  box-shadow: 0 0 0 1px rgba(var(--color-grey-200), 1) inset,
    var(--box-shadow-s);
  outline: 0;

  /* text */
  color: rgba(var(--color-grey-700), 1);
  font: inherit;
  font-family: inherit;
  font-size: var(--font-size-40);
  font-weight: 700;
  letter-spacing: 0.05rem;
  line-height: var(--space-3x);
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  text-shadow: var(--text-shadow-s);
}

button:hover,
input[type="submit"]:hover,
input[type="button"]:hover,
input[type="reset"]:hover,
[role="button"]:hover,
:any-link[role="button"]:hover,
button:active,
input[type="submit"]:active,
input[type="button"]:active,
input[type="reset"]:active,
[role="button"]:active,
:any-link[role="button"]:active {
  color: rgba(var(--color-grey-800), 1);
  box-shadow: 0 0 0 1px rgba(var(--color-grey-300), 1) inset, 
    var(--box-shadow-s);
}

button:focus,
input[type="submit"]:focus,
input[type="button"]:focus,
input[type="reset"]:focus,
[role="button"]:focus,
:any-link[role="button"]:focus {
  outline: 2px solid rgba(var(--color-blue-200), 1);
  border: 0;
  color: rgba(var(--color-grey-900), 1);
  z-index: 1;
}

button:focus:focus:not(:focus-visible),
input[type="submit"]:focus:focus:not(:focus-visible),
input[type="button"]:focus:focus:not(:focus-visible),
input[type="reset"]:focus:focus:not(:focus-visible),
[role="button"]:focus:focus:not(:focus-visible),
:any-link[role="button"]:focus:focus:not(:focus-visible) { 
  outline: none;
}

/* button elements */
button * + *,
button[type="reset"] * + *,
input[type="submit"] * + *,
input[type="button"] * + *,
input[type="reset"] * + *,
[role="button"] * + *,
:any-link[role="button"] * + * {
  margin: 0 0 0 var(--space);
}

/* button icon */
button svg, 
input[type="submit"] svg,
input[type="button"] svg,
input[type="reset"] svg,
[role="button"] svg,
:any-link[role="button"] svg {
  height: calc(var(--space) * 2);
  width: calc(var(--space) * 2);
  display: inline-block;
  fill: none;
  stroke: currentColor;
  stroke-width: 2; 
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* MODIFIERS */

/* ARIA STATES */

/* menubutton button menu expanded */
button[aria-expanded="true"],
button[type="reset"][aria-expanded="true"],
input[type="submit"][aria-expanded="true"],
input[type="button"][aria-expanded="true"],
input[type="reset"][aria-expanded="true"],
[role="button"][aria-expanded="true"],
:any-link[role="button"][aria-expanded="true"] {
  background: rgba(var(--color-grey-00), 1);
  color: rgba(var(--color-grey-600), 1);
  box-shadow: 0 0 0 1px rgba(var(--color-grey-200), 1) inset,
    var(--box-inset-shadow-m);
}

  /* toggle */

button[aria-pressed="true"],
button[type="reset"][aria-pressed="true"],
input[type="submit"][aria-pressed="true"],
input[type="button"][aria-pressed="true"],
input[type="reset"][aria-pressed="true"],
[role="button"][aria-pressed="true"],
:any-link[role="button"][aria-pressed="true"] {
  background: rgba(var(--color-grey-100), 1);
  color: rgba(var(--color-blue-600), 1);
  box-shadow: 0 0 0 1px rgba(var(--color-grey-200), 1) inset,
  var(--box-inset-shadow-m);
}

/* DISPLAY MODIFIERS */

button.is-block,
button[type="reset"].is-block,
input[type="submit"].is-block,
input[type="button"].is-block,
input[type="reset"].is-block,
[role="button"].is-block,
:any-link[role="button"].is-block {
  width: 100%;
}

/* STYLE MODIFIERS */

/* strong: higher contrast */
button.is-strong,
button[type="reset"].is-strong,
input[type="submit"].is-strong,
input[type="button"].is-strong,
input[type="reset"].is-strong,
[role="button"].is-strong,
:any-link[role="button"].is-strong {
  background: rgba(var(--color-grey-700), 1);
  background: var(--gradient-top-grey-60);
  color: rgba(var(--color-bg), 1);
  box-shadow: 
    0 -1px 1px 0 rgba(var(--color-black), 0.04) inset,
    0 1px 1px 0 rgba(255,255,255, .04) inset,
    var(--box-shadow-m);
}

button.is-strong:hover,
button[type="reset"].is-strong:hover,
input[type="submit"].is-strong:hover,
input[type="button"].is-strong:hover,
input[type="reset"].is-strong:hover,
[role="button"].is-strong:hover,
:any-link[role="button"].is-strong:hover,
button.is-strong:active,
button[type="reset"].is-strong:active,
input[type="submit"].is-strong:active,
input[type="button"].is-strong:active,
input[type="reset"].is-strong:active,
[role="button"].is-strong:active {
  background: rgba(var(--color-grey-800), 1);
  background: var(--gradient-top-grey-70);
  color: rgba(var(--color-bg), 1);
  box-shadow: 0 -1px 1px 0 rgba(var(--color-black), 0.04) inset,
      0 1px 1px 0 rgba(255,255,255, .04) inset,
      var(--box-shadow-m);
}

button.is-strong:focus,
button[type="reset"].is-strong:focus,
input[type="submit"].is-strong:focus,
input[type="button"].is-strong:focus,
input[type="reset"].is-strong:focus,
[role="button"].is-strong:focus,
:any-link[role="button"].is-strong:focus {
  color: rgba(var(--color-bg), 1);
}

/* reset style */

button[type="reset"],
input[type="reset"],
button.is-reset,
input[type="submit"].is-reset,
input[type="button"].is-reset,
[role="button"].is-reset,
:any-link[role="button"].is-reset {
  color: rgba(var(--color-red-500), 1);
}

button[type="reset"]:hover,
input[type="reset"]:hover,  
button[type="reset"]:hover,
input[type="reset"]:hover,
button.is-reset:hover,
input[type="submit"].is-reset:hover,
input[type="button"].is-reset:hover,
[role="button"].is-reset:hover,
:any-link[role="button"].is-reset:hover,
button[type="reset"]:active,
input[type="reset"]:active,
button.is-reset:active,
input[type="submit"].is-reset:active,
input[type="button"].is-reset:active,
[role="button"].is-reset:active,
:any-link[role="button"].is-reset:active {
  background: rgba(var(--color-red-500), 1);
  color: rgba(var(--color-red-20), 1);

  box-shadow: 0 0 0 1px rgba(var(--color-red-600), 1) inset, 
    var(--box-shadow-s);
}

button[type="reset"]:focus,
input[type="reset"]:focus,
button.is-reset:focus,
input[type="submit"].is-reset:focus,
input[type="button"].is-reset:focus,
[role="button"].is-reset:focus,
:any-link[role="button"].is-reset:focus {
  background: rgba(var(--color-red-500), 1);
  color: rgba(var(--color-red-20), 1);
  outline: 2px solid rgba(var(--color-red-200), 1);
}

/* link style */
button.is-link,
button[type="reset"].is-link,
input[type="submit"].is-link,
input[type="button"].is-link,
input[type="reset"].is-link,
[role="button"].is-link,
:any-link[role="button"].is-link {
  background: transparent;
  color: rgba(var(--color-grey-500), 1);
  text-decoration: underline;
  border-color: transparent;
  box-shadow: none !important;
}

button.is-link:hover,
button[type="reset"].is-link:hover,
input[type="submit"].is-link:hover,
input[type="button"].is-link:hover,
input[type="reset"].is-link:hover,
[role="button"].is-link:hover,
:any-link[role="button"].is-link:hover,
button.is-link:active,
button[type="reset"].is-link:active,
input[type="submit"].is-link:active,
input[type="button"].is-link:active,
input[type="reset"].is-link:active,
[role="button"].is-link:active,
:any-link[role="button"].is-link:active {
  background: transparent;
  color: rgba(var(--color-grey-700), 1);
  box-shadow: none;
}
  
button.is-link:focus,
button[type="reset"].is-link:focus,
input[type="submit"].is-link:focus,
input[type="button"].is-link:focus,
input[type="reset"].is-link:focus,
[role="button"].is-link:focus,
:any-link[role="button"].is-link:focus {
  color: rgba(var(--color-grey-700), 1);
}

/* SIZE MODIFIERS */

/* small button */
button.is-small,
button[type="reset"].is-small,
input[type="submit"].is-small,
input[type="button"].is-small,
input[type="reset"].is-small,
[role="button"].is-small,
:any-link[role="button"].is-small {
  border-radius: var(--border-radius-s);
  font-size: var(--font-size-30);
  line-height: var(--space-3x);
  min-height: var(--space-3x);
  padding: 0 calc(var(--space) * 1.5);
}

button.is-small svg,
button[type="reset"].is-small svg,
input[type="submit"].is-small svg,
input[type="button"].is-small svg,
input[type="reset"].is-small svg,
[role="button"].is-small svg,
:any-link[role="button"].is-small svg {
  height: var(--space);
  width: var(--space);
}

/* large button */
button.is-large,
button[type="reset"].is-large,
input[type="submit"].is-large,
input[type="button"].is-large,
input[type="reset"].is-large,
[role="button"].is-large,
:any-link[role="button"].is-large {
  border-radius: var(--border-radius-m);
  font-size: var(--font-size-50);
  line-height: calc(var(--space) * 6);
  min-height: calc(var(--space) * 8);
  padding: var(--space) calc(var(--space) * 3);
}

button.is-large * + *,
button[type="reset"].is-large * + *,
input[type="submit"].is-large * + *,
input[type="button"].is-large * + *,
input[type="reset"].is-large * + *,
[role="button"].is-large * + *,
:any-link[role="button"].is-large * + * {
  margin-left: var(--space-2x);
}
  
button.is-large svg,
button[type="reset"].is-large svg,
input[type="submit"].is-large svg,
input[type="button"].is-large svg,
input[type="reset"].is-large svg,
[role="button"].is-large svg,
:any-link[role="button"].is-large svg {
  height: var(--space-3x);
  width: var(--space-3x);
}

/* ICONS */

/* icon alone */
button.is-icon svg,
button[type="reset"].is-icon svg,
input[type="submit"].is-icon svg,
input[type="button"].is-icon svg,
input[type="reset"].is-icon svg,
[role="button"].is-icon svg,
:any-link[role="button"].is-icon svg {
  margin: var(--space-1-2) calc(var(--space) * -0.5);
}

button.is-icon.is-small svg,
button[type="reset"].is-icon.is-small svg,
input[type="submit"].is-icon.is-small svg,
input[type="button"].is-icon.is-small svg,
input[type="reset"].is-icon.is-small svg,
[role="button"].is-icon.is-smallsvg,
:any-link[role="button"].is-icon.is-small svg {
  margin: 0 calc(var(--space) * -1);
}

button.is-icon.is-large svg,
button[type="reset"].is-icon.is-large svg,
input[type="submit"].is-icon.is-large svg,
input[type="button"].is-icon.is-large svg,
input[type="reset"].is-icon.is-large svg,
[role="button"].is-icon.is-large svg,
:any-link[role="button"].is-icon.is-large svg {
  margin: 0 calc(var(--space) * -0.5);
}

@media screen and (-ms-high-contrast: active) {
  button,
  input[type="submit"],
  input[type="button"],
  input[type="reset"],
  [role="button"],
  :any-link[role="button"] {
    border: 2px solid currentcolor;
  }
}
