code,
pre {
  font-family: var(--font-mono);
  color: rgba(var(--color-grey-500), 1);
  font-size: inherit;
  line-height: inherit;
  overflow-y: auto;
  word-wrap: normal;
  white-space: pre-wrap;
	word-spacing: normal;
  word-break: normal;
  margin: 0;
}

code {
  background: rgba(var(--color-grey-50), 1);
}

pre {
  padding: calc(var(--space) * 1 - 1px) 0 calc(var(--space) * 2 + 1px);
}
  
pre p { 
  padding: 0 0 var(--space-3x);
  font-family: inherit;
  font-size: inherit;
}


/* PRISM OVERWRITE */

/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

 code[class*="language-"],
 pre[class*="language-"] {
   color: rgba(var(--color-grey-500), 1);
   background: rgba(var(--color-grey-50), 1);
   text-shadow: none;
   font-family: var(--font-mono);
   font-size: 1rem;
   line-height: inherit;
   text-align: left;
   white-space: wrap;
   word-spacing: normal;
   word-wrap: normal;
   word-break: break-word;
   overflow: hidden;
   -moz-tab-size: 4;
   -o-tab-size: 4;
   tab-size: 4;
   -webkit-hyphens: none;
   -moz-hyphens: none;
   -ms-hyphens: none;
   hyphens: none;
 }
 
 pre[class*="language-"]::-moz-selection,
 pre[class*="language-"] ::-moz-selection,
 code[class*="language-"]::-moz-selection,
 code[class*="language-"] ::-moz-selection {
   text-shadow: none;
   background: rgba(var(--color-blue-100), 1);
 }
 
 pre[class*="language-"]::selection,
 pre[class*="language-"] ::selection,
 code[class*="language-"]::selection,
 code[class*="language-"] ::selection {
   text-shadow: none;
   background: rgba(var(--color-blue-100), 1);
 }
 
 @media print {
   code[class*="language-"],
   pre[class*="language-"] {
     text-shadow: none;
   }
 }
 
 /* Code blocks */
 pre[class*="language-"] {
   padding: calc(var(--space) * 1 - 1px) 0 calc(var(--space) * 2 + 1px);
   margin: 0;
   overflow: auto;
 }
 
 :not(pre) > code[class*="language-"],
 pre[class*="language-"] {
   background: rgba(var(--color-grey-50), 1);
   padding: var(--space-3x);
 }
 
 /* Inline code */
 :not(pre) > code[class*="language-"] {
   padding: 0 var(--space-1-2, 0);
   border-radius: var(--border-radius-m, 0);
   white-space: normal;
 }
 
 .token.comment,
 .token.prolog,
 .token.doctype,
 .token.cdata {
    color: rgba(var(--color-grey-300), 1);
    font-style: italic;
    opacity: 1;
 }
 
 .token.punctuation {
   color: rgba(var(--color-grey-400), 1);
 }
 
 .token.namespace {
   opacity: .7;
 }
 
 .token.property,
 .token.tag,
 .token.boolean,
 .token.number,
 .token.constant,
 .token.symbol,
 .token.deleted {
    color: rgba(var(--color-red-500), 1);
 }

 .token.constant {
  color: rgba(var(--color-yellow-500), 1);
}
 
 .token.selector,
 .token.attr-name,
 .token.string,
 .token.char,
 .token.builtin,
 .token.inserted {
   color: rgba(var(--color-cyan-500), 1);
 }

 .token.attr-name {
    color: rgba(var(--color-blue-500), 1);
 }
 
 .token.operator,
 .token.entity,
 .token.url,
 .language-css .token.string,
 .style .token.string {
   color: rgba(var(--color-grey-500), 1);
   background: transparent;
 }

 .token.operator {
  color: rgba(var(--color-purple-500), 1);
}
 
 .token.atrule,
 .token.keyword {
   color: rgba(var(--color-fushia-500), 1);
 }

 .token.attr-value {
   color: rgba(var(--color-cyan-500), 1);
 }
 
 .token.function,
 .token.class-name {
   color: rgba(var(--color-blue-500), 1);
 }
 
 .token.regex,
 .token.important,
 .token.variable {
   color: rgba(var(--color-yellow-500), 1);
 }
 
 .token.important,
 .token.bold {
   font-weight: var(--font-weight-700);
 }
 .token.italic {
   font-style: italic;
 }
 
 .token.entity {
   cursor: help;
 }